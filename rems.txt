1. if u want auto mode theme depends on OS mode ==>> {
    a. @media (prefers-color-scheme: dark) {
        :root {
            //your vars
        }
    }
    //listen on media query and if matches it 
    b. window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => (e.matches ? enableDark(): disableDark()))
}

2. you can make class with vars and will be inherited {
    .dark-mode {
        //vars
    }
}

3. with JS ==>> {
    a.## store elected theme in localStorage
    b. click on toggleBtn => {
        1. change the icon 
        2. document.body.classList.toggle('dark-mode')
    }
}

/*************************************************************/
3. avatar random background color and text color ==>> {
    a. random txt color => mix-blend-mode: difference;
    b. getRandomColor => () => {
        // color is hexadecimal ( [0-9 + a-f] => (16 indexes) ) and color contains is 6 indexes '#00ffee' 
        //color[math.floor(math.random() * 16)] => 16 is n.of [0-9, a-f] to choose from these
    }
    c. if no avatar image => make the avatar the [0] word of name(1,2) 
}

/**********************************************/
//ticket

* u can use border-image: linear-gradient() but will not work with border-radius
==>> so u 'll use div > div with different bg-color and padding for the parent to show his bg(border-color)

* move ticket with mouse movement ==>> {
    1. make ticket 3D => perspective: 1000px;
    2. certain [center point of ticket] => to ==>> (mouse point - center point) = varOfMovement
    * varOfMovement * number => to be small
    ==>> {
        * mouse points ==>> (e.clientX, e.clientY)
        * center point of ticket ==>> {x, y, width, height} = ticket.getBoundingClientRect()
            => centerPoint = {x: x+width/2, y: y+height/2}
        * degX = (e.clientY - centerPoint.y) * .008 // X calcs to rotate on Y
        * degY = (e.clientX - centerPoint.x) * -.008 // Y calcs to rotate on X
        * ticket transformRotate: (degX)deg, (degY)deg
    }
}